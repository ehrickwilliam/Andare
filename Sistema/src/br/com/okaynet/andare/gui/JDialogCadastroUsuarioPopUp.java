/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.okaynet.andare.gui;

import br.com.okaynet.andare.bibliotecas.Util;
import br.com.okaynet.andare.conexao.Data;
import br.com.okaynet.andare.conexao.TransactionManager;
import br.com.okaynet.andare.daos.DaoUsuarios;
import br.com.okaynet.andare.model.Usuarios;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Erick
 */
public class JDialogCadastroUsuarioPopUp extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCadastroClienteFisico
     */
    public JDialogCadastroUsuarioPopUp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        preencher();
        jPasswordFieldSenha.setVisible(false);
        Usuarios autenticado = (Usuarios) Data.hash.get("usuario");
        int indexOf = autenticado.getPermissoes().indexOf("L");
        if (indexOf > 0) {
            jMenu2.setEnabled(true);
            jMenu2.setEnabled(true);
        } else {
            jMenu2.setEnabled(false);
            jMenu2.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jTextFieldCod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxClienteCon = new javax.swing.JCheckBox();
        jCheckBoxClienteAdd = new javax.swing.JCheckBox();
        jCheckBoxClienteRemove = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jCheckBoxFunCon = new javax.swing.JCheckBox();
        jCheckBoxFunAdd = new javax.swing.JCheckBox();
        jCheckBoxFunRemove = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jCheckBoxOrdemCon = new javax.swing.JCheckBox();
        jCheckBoxOrdemAdd = new javax.swing.JCheckBox();
        jCheckBoxOrdemRemove = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jCheckBoxUsuarioCon = new javax.swing.JCheckBox();
        jCheckBoxUsuarioAdd = new javax.swing.JCheckBox();
        jCheckBoxUsuarioRemove = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jCheckBoxRelatorios = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jCheckBoxAdminOrdem = new javax.swing.JCheckBox();
        jCheckBoxBackUp = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Usuários");
        setMinimumSize(new java.awt.Dimension(608, 410));
        setModal(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldCod.setEditable(false);
        getContentPane().add(jTextFieldCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 40, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Usuário:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 50, -1));
        getContentPane().add(jTextFieldUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 190, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("Código:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Tudo selecionado dara permissão total para o usuário");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jCheckBoxClienteCon.setText("Consultar");
        jPanel1.add(jCheckBoxClienteCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jCheckBoxClienteAdd.setText("Adicionar/Editar");
        jPanel1.add(jCheckBoxClienteAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jCheckBoxClienteRemove.setText("Remover");
        jPanel1.add(jCheckBoxClienteRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setText("Funcionarios:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jCheckBoxFunCon.setText("Consultar");
        jPanel1.add(jCheckBoxFunCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, -1, -1));

        jCheckBoxFunAdd.setText("Adicionar/Editar");
        jPanel1.add(jCheckBoxFunAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        jCheckBoxFunRemove.setText("Remover");
        jPanel1.add(jCheckBoxFunRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("Ordem de Serviço:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jCheckBoxOrdemCon.setText("Consultar");
        jPanel1.add(jCheckBoxOrdemCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        jCheckBoxOrdemAdd.setText("Adicionar/Editar");
        jPanel1.add(jCheckBoxOrdemAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, -1, -1));

        jCheckBoxOrdemRemove.setText("Remover");
        jPanel1.add(jCheckBoxOrdemRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel11.setText("Usuários:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        jCheckBoxUsuarioCon.setText("Consultar");
        jPanel1.add(jCheckBoxUsuarioCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, -1, -1));

        jCheckBoxUsuarioAdd.setText("Adicionar/Editar");
        jPanel1.add(jCheckBoxUsuarioAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        jCheckBoxUsuarioRemove.setText("Remover");
        jPanel1.add(jCheckBoxUsuarioRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("Administrativo:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        jCheckBoxRelatorios.setText("Relatórios");
        jPanel1.add(jCheckBoxRelatorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("Clientes:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jCheckBoxAdminOrdem.setText("Todas as OS ");
        jPanel1.add(jCheckBoxAdminOrdem, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, -1));

        jCheckBoxBackUp.setText("BackUp Sistema");
        jPanel1.add(jCheckBoxBackUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 560, 170));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel8.setText("Permissões:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jPasswordFieldSenha.setEditable(false);
        jPasswordFieldSenha.setEnabled(false);
        getContentPane().add(jPasswordFieldSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 50, -1));

        jMenuBar1.setMinimumSize(new java.awt.Dimension(56, 31));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(396, 31));

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/004.png"))); // NOI18N
        jMenu2.setText("Apagar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/010.png"))); // NOI18N
        jMenu6.setText("Voltar");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu6);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/okaynet/andare/icons/png/006.png"))); // NOI18N
        jMenu1.setText("Salvar");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        if (Util.mostraMensagemEmTela("Deseja salvar?")) {
            salvar();
            this.dispose();
        }

    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        if (jMenu2.isEnabled()) {
            if (Util.mostraMensagemEmTela("Deseja realmente excluir?")) {
                deletar();
            }
        }
    }//GEN-LAST:event_jMenu2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroUsuarioPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroUsuarioPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroUsuarioPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCadastroUsuarioPopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogCadastroUsuarioPopUp dialog = new JDialogCadastroUsuarioPopUp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxAdminOrdem;
    private javax.swing.JCheckBox jCheckBoxBackUp;
    private javax.swing.JCheckBox jCheckBoxClienteAdd;
    private javax.swing.JCheckBox jCheckBoxClienteCon;
    private javax.swing.JCheckBox jCheckBoxClienteRemove;
    private javax.swing.JCheckBox jCheckBoxFunAdd;
    private javax.swing.JCheckBox jCheckBoxFunCon;
    private javax.swing.JCheckBox jCheckBoxFunRemove;
    private javax.swing.JCheckBox jCheckBoxOrdemAdd;
    private javax.swing.JCheckBox jCheckBoxOrdemCon;
    private javax.swing.JCheckBox jCheckBoxOrdemRemove;
    private javax.swing.JCheckBox jCheckBoxRelatorios;
    private javax.swing.JCheckBox jCheckBoxUsuarioAdd;
    private javax.swing.JCheckBox jCheckBoxUsuarioCon;
    private javax.swing.JCheckBox jCheckBoxUsuarioRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        jTextFieldUsuario.setText(null);
        jCheckBoxAdminOrdem.setSelected(false);
        jCheckBoxClienteAdd.setSelected(false);
        jCheckBoxClienteCon.setSelected(false);
        jCheckBoxClienteRemove.setSelected(false);
        jCheckBoxFunAdd.setSelected(false);
        jCheckBoxFunCon.setSelected(false);
        jCheckBoxFunRemove.setSelected(false);
        jCheckBoxOrdemAdd.setSelected(false);
        jCheckBoxOrdemCon.setSelected(false);
        jCheckBoxOrdemRemove.setSelected(false);
        jCheckBoxRelatorios.setSelected(false);
        jCheckBoxUsuarioAdd.setSelected(false);
        jCheckBoxUsuarioCon.setSelected(false);
        jCheckBoxUsuarioRemove.setSelected(false);
    }

    private void salvar() {
        if (validaCamposEmBranco()) {


            Usuarios usuario = new Usuarios();
            usuario.setUsuario(jTextFieldUsuario.getText());
            usuario.setId(Integer.parseInt(jTextFieldCod.getText()));
            usuario.setSenha(jPasswordFieldSenha.getText());
            StringBuilder permissoes = new StringBuilder();
            permissoes.append("ZX");

            if (jCheckBoxAdminOrdem.isSelected()) {
                permissoes.append("S");
            }
            if (jCheckBoxClienteAdd.isSelected()) {
                permissoes.append("A");
            }
            if (jCheckBoxClienteCon.isSelected()) {
                permissoes.append("C");
            }
            if (jCheckBoxClienteRemove.isSelected()) {
                permissoes.append("B");
            }
            if (jCheckBoxFunAdd.isSelected()) {
                permissoes.append("D");
            }
            if (jCheckBoxFunCon.isSelected()) {
                permissoes.append("F");
            }
            if (jCheckBoxFunRemove.isSelected()) {
                permissoes.append("E");
            }
            if (jCheckBoxOrdemAdd.isSelected()) {
                permissoes.append("G");
            }
            if (jCheckBoxOrdemCon.isSelected()) {
                permissoes.append("I");
            }
            if (jCheckBoxOrdemRemove.isSelected()) {
                permissoes.append("H");
            }
            if (jCheckBoxRelatorios.isSelected()) {
                permissoes.append("O");
            }
            if (jCheckBoxUsuarioAdd.isSelected()) {
                permissoes.append("J");
            }
            if (jCheckBoxUsuarioCon.isSelected()) {
                permissoes.append("M");
            }
            if (jCheckBoxUsuarioRemove.isSelected()) {
                permissoes.append("L");
            }
            if (jCheckBoxBackUp.isSelected()) {
                permissoes.append("U");
            }
            usuario.setPermissoes(permissoes.toString());

            TransactionManager.beginTransaction();
            try {
                new DaoUsuarios().persistir(usuario);
                TransactionManager.commit();
                limparCampos();
                Data.hash.remove("usuario");
                Data.hash.put("usuario", usuario);
                JOptionPane.showMessageDialog(rootPane, "Registro salvo com sucesso !");
            } catch (RuntimeException ex) {
                TransactionManager.rollback();
                JOptionPane.showMessageDialog(rootPane, "Ocorreu um erro ao gravar os dados");
            }



        } else {
            JOptionPane.showMessageDialog(rootPane, "Contem campo(s) vazio ou tipo incorreto de dado !");
        }
    }

    private boolean validaCamposEmBranco() {
        int flag = 0;
        Color color = new Color(252, 196, 196);

        if (jTextFieldUsuario.getText().isEmpty()) {
            jTextFieldUsuario.setBackground(color);
            flag = 1;
        } else {
            jTextFieldUsuario.setBackground(Color.white);
        }
        if (flag == 1) {
            return false;
        }
        return true;
    }

    private void deletar() {
        TransactionManager.beginTransaction();
        Usuarios usuarioRemover = new DaoUsuarios().obterPorId(Integer.parseInt(jTextFieldCod.getText()));
        new DaoUsuarios().remover(usuarioRemover);
        TransactionManager.commit();
        this.dispose();
    }

    private void preencher() {
        if (Data.hash.get("usuarioEditar") == null) {
            JOptionPane.showMessageDialog(this, "Aconteceu um problema ao obter os dados.");
        } else {
            if (Data.hash.get("usuarioEditar") instanceof Usuarios) {
                Usuarios user = (Usuarios) Data.hash.get("usuarioEditar");
                Data.hash.remove("usuarioEditar");
                if (user == null) {
                    JOptionPane.showMessageDialog(this, "Aconteceu um problema ao obter os dados.");
                } else {

                    jTextFieldCod.setText(String.valueOf(user.getId()));
                    jTextFieldUsuario.setText(user.getUsuario());
                    String permissoes = user.getPermissoes();
                    jPasswordFieldSenha.setText(user.getSenha());
                    if (permissoes != null && permissoes != "") {
                        int indexOf = permissoes.indexOf("A");
                        if (indexOf > -1) {
                            jCheckBoxClienteAdd.doClick();
                        }

                        indexOf = permissoes.indexOf("B");
                        if (indexOf > -1) {
                            jCheckBoxClienteRemove.doClick();
                        }

                        indexOf = permissoes.indexOf("C");
                        if (indexOf > -1) {
                            jCheckBoxClienteCon.doClick();
                        }

                        indexOf = permissoes.indexOf("D");
                        if (indexOf > -1) {
                            jCheckBoxFunAdd.doClick();
                        }

                        indexOf = permissoes.indexOf("E");
                        if (indexOf > -1) {
                            jCheckBoxFunRemove.doClick();
                        }

                        indexOf = permissoes.indexOf("F");
                        if (indexOf > -1) {
                            jCheckBoxFunCon.doClick();
                        }

                        indexOf = permissoes.indexOf("G");
                        if (indexOf > -1) {
                            jCheckBoxOrdemAdd.doClick();
                        }

                        indexOf = permissoes.indexOf("H");
                        if (indexOf > -1) {
                            jCheckBoxOrdemRemove.doClick();
                        }

                        indexOf = permissoes.indexOf("I");
                        if (indexOf > -1) {
                            jCheckBoxOrdemCon.doClick();
                        }

                        indexOf = permissoes.indexOf("J");
                        if (indexOf > -1) {
                            jCheckBoxUsuarioAdd.doClick();
                        }

                        indexOf = permissoes.indexOf("L");
                        if (indexOf > -1) {
                            jCheckBoxUsuarioRemove.doClick();
                        }

                        indexOf = permissoes.indexOf("M");
                        if (indexOf > -1) {
                            jCheckBoxUsuarioCon.doClick();
                        }

                        indexOf = permissoes.indexOf("S");
                        if (indexOf > -1) {
                            jCheckBoxAdminOrdem.doClick();
                        }

                        indexOf = permissoes.indexOf("O");
                        if (indexOf > -1) {
                            jCheckBoxRelatorios.doClick();
                        }
                        
                        indexOf = permissoes.indexOf("U");
                        if (indexOf > -1) {
                            jCheckBoxBackUp.doClick();
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Aconteceu um problema ao obter os dados.");
                Data.hash.remove("usuarioEditar");
            }
        }
    }
}
